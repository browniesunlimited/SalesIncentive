//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SalesIncentive.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KHAS_BO_BUEntities : DbContext
    {
        public KHAS_BO_BUEntities()
            : base("name=KHAS_BO_BUEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<T_SALES_INCENTIVE_AREA> T_SALES_INCENTIVE_AREA { get; set; }
        public virtual DbSet<T_SALES_INCENTIVE_DISTRIBUTION_CREW> T_SALES_INCENTIVE_DISTRIBUTION_CREW { get; set; }
        public virtual DbSet<T_SALES_INCENTIVE_SPECIAL> T_SALES_INCENTIVE_SPECIAL { get; set; }
        public virtual DbSet<T_SALES_INCENTIVE_NEW_SCRF> T_SALES_INCENTIVE_NEW_SCRF { get; set; }
        public virtual DbSet<M_EMPLOYEE> M_EMPLOYEE { get; set; }
        public virtual DbSet<SalesIncentiveVariance> SalesIncentiveVariances { get; set; }
        public virtual DbSet<M_OUTLET> M_OUTLET { get; set; }
        public virtual DbSet<INCENTIVE_DAYS_WORK> INCENTIVE_DAYS_WORK { get; set; }
        public virtual DbSet<INCENTIVE_SCRF> INCENTIVE_SCRF { get; set; }
        public virtual DbSet<T_SALES_INCENTIVE_NEW_BANK_FILE> T_SALES_INCENTIVE_NEW_BANK_FILE { get; set; }
        public virtual DbSet<RPT_SALES_INCENTIVE_QOUTLET> RPT_SALES_INCENTIVE_QOUTLET { get; set; }
        public virtual DbSet<RPT_SALES_INCENTIVE_QAREA> RPT_SALES_INCENTIVE_QAREA { get; set; }
        public virtual DbSet<RPT_AREA_INCENTIVE> RPT_AREA_INCENTIVE { get; set; }
        public virtual DbSet<RPT_CREW_INCENTIVE> RPT_CREW_INCENTIVE { get; set; }
        public virtual DbSet<NEW_SALES_INCENTIVE_VIEW> NEW_SALES_INCENTIVE_VIEW { get; set; }
        public virtual DbSet<NEW_SALES_INCENTIVE_AREA_BNK> NEW_SALES_INCENTIVE_AREA_BNK { get; set; }
    
        public virtual int SalesIncentiveByRam(string periodTo, string periodFrom, string dateToday, string user)
        {
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var dateTodayParameter = dateToday != null ?
                new ObjectParameter("DateToday", dateToday) :
                new ObjectParameter("DateToday", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SalesIncentiveByRam", periodToParameter, periodFromParameter, dateTodayParameter, userParameter);
        }
    
        public virtual int SalesCrewIncentiveByRam(string periodTo, string periodFrom, string dateToday, string user)
        {
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var dateTodayParameter = dateToday != null ?
                new ObjectParameter("DateToday", dateToday) :
                new ObjectParameter("DateToday", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SalesCrewIncentiveByRam", periodToParameter, periodFromParameter, dateTodayParameter, userParameter);
        }
    
        public virtual int AreaIncentiveByRam(string periodTo, string periodFrom, string dateToday, string user)
        {
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var dateTodayParameter = dateToday != null ?
                new ObjectParameter("DateToday", dateToday) :
                new ObjectParameter("DateToday", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AreaIncentiveByRam", periodToParameter, periodFromParameter, dateTodayParameter, userParameter);
        }
    
        public virtual int SpecialIncentivebyRam(string periodTo, string periodFrom, string dateToday, string user)
        {
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var dateTodayParameter = dateToday != null ?
                new ObjectParameter("DateToday", dateToday) :
                new ObjectParameter("DateToday", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpecialIncentivebyRam", periodToParameter, periodFromParameter, dateTodayParameter, userParameter);
        }
    
        public virtual int SCRFbyRam(string periodTo, string periodFrom, string dateToday, string user)
        {
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var dateTodayParameter = dateToday != null ?
                new ObjectParameter("DateToday", dateToday) :
                new ObjectParameter("DateToday", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SCRFbyRam", periodToParameter, periodFromParameter, dateTodayParameter, userParameter);
        }
    
        public virtual int GenerateBankFileCrewByRam(string periodFrom, string periodTo, string dateToday, string user)
        {
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            var dateTodayParameter = dateToday != null ?
                new ObjectParameter("DateToday", dateToday) :
                new ObjectParameter("DateToday", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateBankFileCrewByRam", periodFromParameter, periodToParameter, dateTodayParameter, userParameter);
        }
    
        public virtual int GenerateBankFileAreaByRam(string periodFrom, string periodTo, string dateToday, string user)
        {
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            var dateTodayParameter = dateToday != null ?
                new ObjectParameter("DateToday", dateToday) :
                new ObjectParameter("DateToday", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateBankFileAreaByRam", periodFromParameter, periodToParameter, dateTodayParameter, userParameter);
        }
    
        public virtual int GenerateBankFileSpecialByRam(string periodFrom, string periodTo, string dateToday, string user)
        {
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("PeriodFrom", periodFrom) :
                new ObjectParameter("PeriodFrom", typeof(string));
    
            var periodToParameter = periodTo != null ?
                new ObjectParameter("PeriodTo", periodTo) :
                new ObjectParameter("PeriodTo", typeof(string));
    
            var dateTodayParameter = dateToday != null ?
                new ObjectParameter("DateToday", dateToday) :
                new ObjectParameter("DateToday", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateBankFileSpecialByRam", periodFromParameter, periodToParameter, dateTodayParameter, userParameter);
        }
    
        public virtual ObjectResult<string> PasswordByRam(string password)
        {
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("PasswordByRam", passwordParameter);
        }
    
        public virtual ObjectResult<OutletListForVariance_Result> OutletListForVariance(Nullable<int> dateMonth, Nullable<int> dateYear)
        {
            var dateMonthParameter = dateMonth.HasValue ?
                new ObjectParameter("DateMonth", dateMonth) :
                new ObjectParameter("DateMonth", typeof(int));
    
            var dateYearParameter = dateYear.HasValue ?
                new ObjectParameter("DateYear", dateYear) :
                new ObjectParameter("DateYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OutletListForVariance_Result>("OutletListForVariance", dateMonthParameter, dateYearParameter);
        }
    
        public virtual ObjectResult<SP_DAYS_WORK_PER_OUTLET_Result1> SP_DAYS_WORK_PER_OUTLET(Nullable<int> dateMonth, Nullable<int> dateYear)
        {
            var dateMonthParameter = dateMonth.HasValue ?
                new ObjectParameter("DateMonth", dateMonth) :
                new ObjectParameter("DateMonth", typeof(int));
    
            var dateYearParameter = dateYear.HasValue ?
                new ObjectParameter("DateYear", dateYear) :
                new ObjectParameter("DateYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_DAYS_WORK_PER_OUTLET_Result1>("SP_DAYS_WORK_PER_OUTLET", dateMonthParameter, dateYearParameter);
        }
    
        public virtual int SP_DELETE_BANK_FILE(Nullable<int> monthDate, Nullable<int> yearDate)
        {
            var monthDateParameter = monthDate.HasValue ?
                new ObjectParameter("MonthDate", monthDate) :
                new ObjectParameter("MonthDate", typeof(int));
    
            var yearDateParameter = yearDate.HasValue ?
                new ObjectParameter("YearDate", yearDate) :
                new ObjectParameter("YearDate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_DELETE_BANK_FILE", monthDateParameter, yearDateParameter);
        }
    
        public virtual int SP_UPDATE_FINAL_PRODUCT_BANKFILE(Nullable<long> iD, Nullable<long> finalAmount)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(long));
    
            var finalAmountParameter = finalAmount.HasValue ?
                new ObjectParameter("FinalAmount", finalAmount) :
                new ObjectParameter("FinalAmount", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UPDATE_FINAL_PRODUCT_BANKFILE", iDParameter, finalAmountParameter);
        }
    
        public virtual int SP_INSERT_BANK_FILE(Nullable<int> month_Date, Nullable<int> year_Date, Nullable<int> empID, string empName, Nullable<decimal> incentive, string acctNo, Nullable<int> generatedBy, string generatedDate, string particulars)
        {
            var month_DateParameter = month_Date.HasValue ?
                new ObjectParameter("Month_Date", month_Date) :
                new ObjectParameter("Month_Date", typeof(int));
    
            var year_DateParameter = year_Date.HasValue ?
                new ObjectParameter("Year_Date", year_Date) :
                new ObjectParameter("Year_Date", typeof(int));
    
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("EmpID", empID) :
                new ObjectParameter("EmpID", typeof(int));
    
            var empNameParameter = empName != null ?
                new ObjectParameter("EmpName", empName) :
                new ObjectParameter("EmpName", typeof(string));
    
            var incentiveParameter = incentive.HasValue ?
                new ObjectParameter("Incentive", incentive) :
                new ObjectParameter("Incentive", typeof(decimal));
    
            var acctNoParameter = acctNo != null ?
                new ObjectParameter("AcctNo", acctNo) :
                new ObjectParameter("AcctNo", typeof(string));
    
            var generatedByParameter = generatedBy.HasValue ?
                new ObjectParameter("GeneratedBy", generatedBy) :
                new ObjectParameter("GeneratedBy", typeof(int));
    
            var generatedDateParameter = generatedDate != null ?
                new ObjectParameter("GeneratedDate", generatedDate) :
                new ObjectParameter("GeneratedDate", typeof(string));
    
            var particularsParameter = particulars != null ?
                new ObjectParameter("Particulars", particulars) :
                new ObjectParameter("Particulars", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_INSERT_BANK_FILE", month_DateParameter, year_DateParameter, empIDParameter, empNameParameter, incentiveParameter, acctNoParameter, generatedByParameter, generatedDateParameter, particularsParameter);
        }
    }
}
